
image:     file format elf32-lm32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004c4  00000000  00000000  00000054  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  1 .rodata       00000004  000004c4  000004c4  00000518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000010  000004c8  000004c8  0000051c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000084  000004d8  000004d8  0000052c  2**2
                  ALLOC
  4 .debug_abbrev 00000216  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000059b  00000000  00000000  00000742  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000038d  00000000  00000000  00000cdd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000110  00000000  00000000  0000106c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000147  00000000  00000000  0000117c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 00000138  00000000  00000000  000012c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 00000077  00000000  00000000  000013fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000040  00000000  00000000  00001472  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000025f  00000000  00000000  000014b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      00000011  00000000  00000000  00001711  2**0
                  CONTENTS, READONLY
 14 .debug_ranges 00000018  00000000  00000000  00001722  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <_ftext>:
   0:	98 00 00 00 	xor r0,r0,r0
   4:	d0 00 00 00 	wcsr IE,r0
   8:	78 01 00 00 	mvhi r1,0x0
   c:	38 21 00 00 	ori r1,r1,0x0
  10:	d0 e1 00 00 	wcsr EBA,r1
  14:	f8 00 00 3b 	calli 100 <_crt0>
  18:	34 00 00 00 	nop
  1c:	34 00 00 00 	nop

00000020 <_breakpoint_handler>:
  20:	34 00 00 00 	nop
  24:	34 00 00 00 	nop
  28:	34 00 00 00 	nop
  2c:	34 00 00 00 	nop
  30:	34 00 00 00 	nop
  34:	34 00 00 00 	nop
  38:	34 00 00 00 	nop
  3c:	34 00 00 00 	nop

00000040 <_ibuserror_handler>:
  40:	34 00 00 00 	nop
  44:	34 00 00 00 	nop
  48:	34 00 00 00 	nop
  4c:	34 00 00 00 	nop
  50:	34 00 00 00 	nop
  54:	34 00 00 00 	nop
  58:	34 00 00 00 	nop
  5c:	34 00 00 00 	nop

00000060 <_watchpoint_handler>:
  60:	34 00 00 00 	nop
  64:	34 00 00 00 	nop
  68:	34 00 00 00 	nop
  6c:	34 00 00 00 	nop
  70:	34 00 00 00 	nop
  74:	34 00 00 00 	nop
  78:	34 00 00 00 	nop
  7c:	34 00 00 00 	nop

00000080 <_dbuserror_handler>:
  80:	34 00 00 00 	nop
  84:	34 00 00 00 	nop
  88:	34 00 00 00 	nop
  8c:	34 00 00 00 	nop
  90:	34 00 00 00 	nop
  94:	34 00 00 00 	nop
  98:	34 00 00 00 	nop
  9c:	34 00 00 00 	nop

000000a0 <_divzero_handler>:
  a0:	34 00 00 00 	nop
  a4:	34 00 00 00 	nop
  a8:	34 00 00 00 	nop
  ac:	34 00 00 00 	nop
  b0:	34 00 00 00 	nop
  b4:	34 00 00 00 	nop
  b8:	34 00 00 00 	nop
  bc:	34 00 00 00 	nop

000000c0 <_interrupt_handler>:
  c0:	5b 9d 00 00 	sw (sp+0),ra
  c4:	f8 00 00 2b 	calli 170 <_save_all>
  c8:	90 40 08 00 	rcsr r1,IP
  cc:	f8 00 00 82 	calli 2d4 <irq_handler>
  d0:	78 01 ff ff 	mvhi r1,0xffff
  d4:	38 21 ff ff 	ori r1,r1,0xffff
  d8:	d0 41 00 00 	wcsr IP,r1
  dc:	e0 00 00 38 	bi 1bc <_restore_all_and_eret>

000000e0 <_scall_handler>:
  e0:	34 00 00 00 	nop
  e4:	34 00 00 00 	nop
  e8:	34 00 00 00 	nop
  ec:	34 00 00 00 	nop
  f0:	34 00 00 00 	nop
  f4:	34 00 00 00 	nop
  f8:	34 00 00 00 	nop
  fc:	34 00 00 00 	nop

00000100 <_crt0>:
 100:	78 1c 00 00 	mvhi sp,0x0
 104:	3b 9c 0f fc 	ori sp,sp,0xffc
 108:	78 1a 00 00 	mvhi gp,0x0
 10c:	3b 5a 04 e0 	ori gp,gp,0x4e0
 110:	78 01 00 00 	mvhi r1,0x0
 114:	38 21 04 d8 	ori r1,r1,0x4d8
 118:	78 03 00 00 	mvhi r3,0x0
 11c:	38 63 05 5c 	ori r3,r3,0x55c

00000120 <.clearBSS>:
 120:	44 23 00 04 	be r1,r3,130 <.callMain>
 124:	58 20 00 00 	sw (r1+0),r0
 128:	34 21 00 04 	addi r1,r1,4
 12c:	e3 ff ff fd 	bi 120 <.clearBSS>

00000130 <.callMain>:
 130:	34 01 00 00 	mvi r1,0
 134:	34 02 00 00 	mvi r2,0
 138:	34 03 00 00 	mvi r3,0
 13c:	f8 00 00 33 	calli 208 <main>

00000140 <irq_enable>:
 140:	34 01 00 01 	mvi r1,1
 144:	d0 01 00 00 	wcsr IE,r1
 148:	c3 a0 00 00 	ret

0000014c <irq_disable>:
 14c:	34 01 00 00 	mvi r1,0
 150:	d0 01 00 00 	wcsr IE,r1
 154:	c3 a0 00 00 	ret

00000158 <irq_set_mask>:
 158:	d0 21 00 00 	wcsr IM,r1
 15c:	c3 a0 00 00 	ret

00000160 <irq_get_mask>:
 160:	90 20 08 00 	rcsr r1,IM
 164:	c3 a0 00 00 	ret

00000168 <jump>:
 168:	c0 20 00 00 	b r1

0000016c <halt>:
 16c:	e0 00 00 00 	bi 16c <halt>

00000170 <_save_all>:
 170:	37 9c ff 80 	addi sp,sp,-128
 174:	5b 81 00 04 	sw (sp+4),r1
 178:	5b 82 00 08 	sw (sp+8),r2
 17c:	5b 83 00 0c 	sw (sp+12),r3
 180:	5b 84 00 10 	sw (sp+16),r4
 184:	5b 85 00 14 	sw (sp+20),r5
 188:	5b 86 00 18 	sw (sp+24),r6
 18c:	5b 87 00 1c 	sw (sp+28),r7
 190:	5b 88 00 20 	sw (sp+32),r8
 194:	5b 89 00 24 	sw (sp+36),r9
 198:	5b 8a 00 28 	sw (sp+40),r10
 19c:	5b 9e 00 78 	sw (sp+120),ea
 1a0:	5b 9f 00 7c 	sw (sp+124),ba
 1a4:	2b 81 00 80 	lw r1,(sp+128)
 1a8:	5b 81 00 74 	sw (sp+116),r1
 1ac:	bb 80 08 00 	mv r1,sp
 1b0:	34 21 00 80 	addi r1,r1,128
 1b4:	5b 81 00 70 	sw (sp+112),r1
 1b8:	c3 a0 00 00 	ret

000001bc <_restore_all_and_eret>:
 1bc:	2b 81 00 04 	lw r1,(sp+4)
 1c0:	2b 82 00 08 	lw r2,(sp+8)
 1c4:	2b 83 00 0c 	lw r3,(sp+12)
 1c8:	2b 84 00 10 	lw r4,(sp+16)
 1cc:	2b 85 00 14 	lw r5,(sp+20)
 1d0:	2b 86 00 18 	lw r6,(sp+24)
 1d4:	2b 87 00 1c 	lw r7,(sp+28)
 1d8:	2b 88 00 20 	lw r8,(sp+32)
 1dc:	2b 89 00 24 	lw r9,(sp+36)
 1e0:	2b 8a 00 28 	lw r10,(sp+40)
 1e4:	2b 9d 00 74 	lw ra,(sp+116)
 1e8:	2b 9e 00 78 	lw ea,(sp+120)
 1ec:	2b 9f 00 7c 	lw ba,(sp+124)
 1f0:	2b 9c 00 70 	lw sp,(sp+112)
 1f4:	c3 c0 00 00 	eret

000001f8 <get_sp>:
 1f8:	bb 80 08 00 	mv r1,sp
 1fc:	c3 a0 00 00 	ret

00000200 <get_gp>:
 200:	bb 40 08 00 	mv r1,gp
 204:	c3 a0 00 00 	ret

00000208 <main>:
#include "soc-hw.h"


int main()
{
 208:	37 9c ff f8 	addi sp,sp,-8
 20c:	5b 8b 00 08 	sw (sp+8),r11
 210:	5b 9d 00 04 	sw (sp+4),ra
	uint8_t c=0;
	

//	uart_putstr("               Envio serial para el DMX       \n\n\n");
	
        value=0;
 214:	34 0b 00 00 	mvi r11,0
		//c=uart_getchar();
                //uart_putchar(4);
                c='1';
		if ((c>='0') && (c<='9')) 
		{
			value = (2*value) + c - '0';
 218:	3d 6b 00 01 	sli r11,r11,1
 21c:	35 6b 00 01 	addi r11,r11,1
 220:	21 6b 00 ff 	andi r11,r11,0xff
			uart_putchar(value);
 224:	b9 60 08 00 	mv r1,r11
 228:	f8 00 00 91 	calli 46c <uart_putchar>
 22c:	e3 ff ff fb 	bi 218 <main+0x10>

00000230 <isr_null>:
 230:	c3 a0 00 00 	ret

00000234 <tic_isr>:
 234:	78 01 00 00 	mvhi r1,0x0
 238:	38 21 05 58 	ori r1,r1,0x558
 23c:	28 23 00 00 	lw r3,(r1+0)
 240:	78 02 00 00 	mvhi r2,0x0
 244:	38 42 04 cc 	ori r2,r2,0x4cc
 248:	28 42 00 00 	lw r2,(r2+0)
 24c:	34 63 00 01 	addi r3,r3,1
 250:	58 23 00 00 	sw (r1+0),r3
 254:	34 01 00 0e 	mvi r1,14
 258:	58 41 00 00 	sw (r2+0),r1
 25c:	c3 a0 00 00 	ret

00000260 <prueba>:
 260:	78 02 00 00 	mvhi r2,0x0
 264:	38 42 04 c8 	ori r2,r2,0x4c8
 268:	78 01 00 00 	mvhi r1,0x0
 26c:	28 44 00 00 	lw r4,(r2+0)
 270:	38 21 04 cc 	ori r1,r1,0x4cc
 274:	78 02 00 00 	mvhi r2,0x0
 278:	28 23 00 00 	lw r3,(r1+0)
 27c:	38 42 04 d0 	ori r2,r2,0x4d0
 280:	78 01 00 00 	mvhi r1,0x0
 284:	28 42 00 00 	lw r2,(r2+0)
 288:	38 21 04 d4 	ori r1,r1,0x4d4
 28c:	34 05 00 1e 	mvi r5,30
 290:	58 85 00 04 	sw (r4+4),r5
 294:	28 21 00 00 	lw r1,(r1+0)
 298:	34 04 00 aa 	mvi r4,170
 29c:	58 64 00 00 	sw (r3+0),r4
 2a0:	34 03 00 55 	mvi r3,85
 2a4:	58 43 00 00 	sw (r2+0),r3
 2a8:	34 02 00 01 	mvi r2,1
 2ac:	58 22 00 00 	sw (r1+0),r2
 2b0:	34 02 00 02 	mvi r2,2
 2b4:	58 22 00 04 	sw (r1+4),r2
 2b8:	34 02 00 03 	mvi r2,3
 2bc:	58 22 00 08 	sw (r1+8),r2
 2c0:	34 02 00 04 	mvi r2,4
 2c4:	58 22 00 10 	sw (r1+16),r2
 2c8:	34 02 00 05 	mvi r2,5
 2cc:	58 22 00 0c 	sw (r1+12),r2
 2d0:	c3 a0 00 00 	ret

000002d4 <irq_handler>:
 2d4:	37 9c ff f0 	addi sp,sp,-16
 2d8:	5b 8b 00 10 	sw (sp+16),r11
 2dc:	5b 8c 00 0c 	sw (sp+12),r12
 2e0:	5b 8d 00 08 	sw (sp+8),r13
 2e4:	5b 9d 00 04 	sw (sp+4),ra
 2e8:	78 0b 00 00 	mvhi r11,0x0
 2ec:	39 6b 04 d8 	ori r11,r11,0x4d8
 2f0:	b8 20 60 00 	mv r12,r1
 2f4:	35 6d 00 80 	addi r13,r11,128
 2f8:	e0 00 00 04 	bi 308 <irq_handler+0x34>
 2fc:	35 6b 00 04 	addi r11,r11,4
 300:	45 6d 00 08 	be r11,r13,320 <irq_handler+0x4c>
 304:	01 8c 00 01 	srui r12,r12,1
 308:	21 81 00 01 	andi r1,r12,0x1
 30c:	44 20 ff fc 	be r1,r0,2fc <irq_handler+0x28>
 310:	29 61 00 00 	lw r1,(r11+0)
 314:	35 6b 00 04 	addi r11,r11,4
 318:	d8 20 00 00 	call r1
 31c:	5d 6d ff fa 	bne r11,r13,304 <irq_handler+0x30>
 320:	2b 9d 00 04 	lw ra,(sp+4)
 324:	2b 8b 00 10 	lw r11,(sp+16)
 328:	2b 8c 00 0c 	lw r12,(sp+12)
 32c:	2b 8d 00 08 	lw r13,(sp+8)
 330:	37 9c 00 10 	addi sp,sp,16
 334:	c3 a0 00 00 	ret

00000338 <isr_init>:
 338:	78 01 00 00 	mvhi r1,0x0
 33c:	78 02 00 00 	mvhi r2,0x0
 340:	38 21 04 d8 	ori r1,r1,0x4d8
 344:	38 42 02 30 	ori r2,r2,0x230
 348:	34 23 00 80 	addi r3,r1,128
 34c:	58 22 00 00 	sw (r1+0),r2
 350:	34 21 00 04 	addi r1,r1,4
 354:	5c 23 ff fe 	bne r1,r3,34c <isr_init+0x14>
 358:	c3 a0 00 00 	ret

0000035c <isr_register>:
 35c:	78 03 00 00 	mvhi r3,0x0
 360:	3c 21 00 02 	sli r1,r1,2
 364:	38 63 04 d8 	ori r3,r3,0x4d8
 368:	b4 61 18 00 	add r3,r3,r1
 36c:	58 62 00 00 	sw (r3+0),r2
 370:	c3 a0 00 00 	ret

00000374 <isr_unregister>:
 374:	78 03 00 00 	mvhi r3,0x0
 378:	3c 21 00 02 	sli r1,r1,2
 37c:	38 63 04 d8 	ori r3,r3,0x4d8
 380:	78 02 00 00 	mvhi r2,0x0
 384:	b4 61 18 00 	add r3,r3,r1
 388:	38 42 02 30 	ori r2,r2,0x230
 38c:	58 62 00 00 	sw (r3+0),r2
 390:	c3 a0 00 00 	ret

00000394 <msleep>:
 394:	78 04 00 00 	mvhi r4,0x0
 398:	38 84 04 c4 	ori r4,r4,0x4c4
 39c:	28 83 00 00 	lw r3,(r4+0)
 3a0:	78 02 00 00 	mvhi r2,0x0
 3a4:	38 42 04 cc 	ori r2,r2,0x4cc
 3a8:	28 42 00 00 	lw r2,(r2+0)
 3ac:	88 23 08 00 	mul r1,r1,r3
 3b0:	58 41 00 10 	sw (r2+16),r1
 3b4:	58 40 00 14 	sw (r2+20),r0
 3b8:	34 01 00 08 	mvi r1,8
 3bc:	58 41 00 0c 	sw (r2+12),r1
 3c0:	28 41 00 0c 	lw r1,(r2+12)
 3c4:	20 21 00 01 	andi r1,r1,0x1
 3c8:	44 20 ff fe 	be r1,r0,3c0 <msleep+0x2c>
 3cc:	c3 a0 00 00 	ret

000003d0 <nsleep>:
 3d0:	78 02 00 00 	mvhi r2,0x0
 3d4:	38 42 04 cc 	ori r2,r2,0x4cc
 3d8:	28 42 00 00 	lw r2,(r2+0)
 3dc:	08 21 00 64 	muli r1,r1,100
 3e0:	58 41 00 10 	sw (r2+16),r1
 3e4:	58 40 00 14 	sw (r2+20),r0
 3e8:	34 01 00 08 	mvi r1,8
 3ec:	58 41 00 0c 	sw (r2+12),r1
 3f0:	28 41 00 0c 	lw r1,(r2+12)
 3f4:	20 21 00 01 	andi r1,r1,0x1
 3f8:	44 20 ff fe 	be r1,r0,3f0 <nsleep+0x20>
 3fc:	c3 a0 00 00 	ret

00000400 <tic_init>:
 400:	78 01 00 00 	mvhi r1,0x0
 404:	38 21 04 cc 	ori r1,r1,0x4cc
 408:	28 23 00 00 	lw r3,(r1+0)
 40c:	34 02 27 10 	mvi r2,10000
 410:	78 01 00 00 	mvhi r1,0x0
 414:	58 62 00 04 	sw (r3+4),r2
 418:	38 21 05 58 	ori r1,r1,0x558
 41c:	58 60 00 08 	sw (r3+8),r0
 420:	58 20 00 00 	sw (r1+0),r0
 424:	78 02 00 00 	mvhi r2,0x0
 428:	78 01 00 00 	mvhi r1,0x0
 42c:	34 04 00 0e 	mvi r4,14
 430:	58 64 00 00 	sw (r3+0),r4
 434:	38 21 04 d8 	ori r1,r1,0x4d8
 438:	38 42 02 34 	ori r2,r2,0x234
 43c:	58 22 00 04 	sw (r1+4),r2
 440:	c3 a0 00 00 	ret

00000444 <uart_init>:
 444:	c3 a0 00 00 	ret

00000448 <uart_getchar>:
 448:	78 01 00 00 	mvhi r1,0x0
 44c:	38 21 04 c8 	ori r1,r1,0x4c8
 450:	28 22 00 00 	lw r2,(r1+0)
 454:	28 41 00 00 	lw r1,(r2+0)
 458:	20 21 00 01 	andi r1,r1,0x1
 45c:	44 20 ff fe 	be r1,r0,454 <uart_getchar+0xc>
 460:	28 41 00 04 	lw r1,(r2+4)
 464:	20 21 00 ff 	andi r1,r1,0xff
 468:	c3 a0 00 00 	ret

0000046c <uart_putchar>:
 46c:	78 02 00 00 	mvhi r2,0x0
 470:	38 42 04 c8 	ori r2,r2,0x4c8
 474:	28 43 00 00 	lw r3,(r2+0)
 478:	20 21 00 ff 	andi r1,r1,0xff
 47c:	28 62 00 00 	lw r2,(r3+0)
 480:	20 42 00 10 	andi r2,r2,0x10
 484:	5c 40 ff fe 	bne r2,r0,47c <uart_putchar+0x10>
 488:	58 61 00 04 	sw (r3+4),r1
 48c:	c3 a0 00 00 	ret

00000490 <uart_putstr>:
 490:	40 24 00 00 	lbu r4,(r1+0)
 494:	44 80 00 0b 	be r4,r0,4c0 <uart_putstr+0x30>
 498:	78 02 00 00 	mvhi r2,0x0
 49c:	38 42 04 c8 	ori r2,r2,0x4c8
 4a0:	28 43 00 00 	lw r3,(r2+0)
 4a4:	28 62 00 00 	lw r2,(r3+0)
 4a8:	20 42 00 10 	andi r2,r2,0x10
 4ac:	5c 40 ff fe 	bne r2,r0,4a4 <uart_putstr+0x14>
 4b0:	58 64 00 04 	sw (r3+4),r4
 4b4:	34 21 00 01 	addi r1,r1,1
 4b8:	40 24 00 00 	lbu r4,(r1+0)
 4bc:	5c 82 ff fa 	bne r4,r2,4a4 <uart_putstr+0x14>
 4c0:	c3 a0 00 00 	ret
